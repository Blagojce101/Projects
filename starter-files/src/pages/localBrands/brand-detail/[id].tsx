import BrandReleatedProducts from "@/Components/BrandReleatedProducts";
import { BrandType, ProductType } from "@/interfaces/interfaces";
import { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import React from "react";

interface Props {
  brand: BrandType;
  productsData: ProductType[];
}

const BrandDetailPage: NextPage<Props> = ({ brand, productsData }) => {
  return (
    <>
      <Head>
        <title className="text-capitalize">{brand.brandName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container d-flex justify-content-start align-items-center flex-wrap px-4 my-3">
        <div className="row">
          <div className="col-12 d-flex justify-content-start align-items-center">
            <img src="/sparks.png" alt="" className="sparks" />
            <h4
              className="m-0 text-capitalize brand-page-font"
              style={{ fontSize: "22px" }}>
              {brand.brandName}
            </h4>
          </div>
        </div>
      </div>

      <div className="container d-flex justify-content-center align-items-center flex-wrap px-4 mb-3">
        <div className="row">
          <div className="col-sm-12 col-md-6 text-center p-0">
            <img
              src={brand.brand_image}
              alt={brand.brand_image}
              className="w-100"
            />
          </div>

          <div className="col-sm-12 col-md-6">
            <p className="brand-page-font" style={{ fontSize: "16px" }}>
              {brand.first_content}
            </p>
            <ul>
              {brand.li_elements.map((element) => {
                return (
                  <li
                    key={element.id}
                    className="brand-page-font"
                    style={{ fontSize: "16px" }}>
                    {element.content}
                  </li>
                );
              })}
            </ul>
            <p className="brand-page-font" style={{ fontSize: "16px" }}>
              {brand.second_content}
            </p>
            <p className="brand-page-font" style={{ fontSize: "16px" }}>
              {brand.third_content}
            </p>
          </div>
        </div>
      </div>
      <BrandReleatedProducts products={productsData} />
    </>
  );
};

export default BrandDetailPage;

export const getStaticPaths: GetStaticPaths = async () => {
  const brandsRes = await fetch(`http://localhost:5001/localBrands`);
  const brandsData: BrandType[] = await brandsRes.json();

  const paths = brandsData.map((brand) => {
    return {
      params: {
        id: brand.id.toString(),
      },
    };
  });

  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  let brand: BrandType | undefined = undefined;

  if (params?.id) {
    const brandRes = await fetch(
      `http://localhost:5001/localBrands/${params.id}`
    );
    brand = await brandRes.json();
  }

  const productsRes = await fetch(
    `http://localhost:5001/products?brand=${brand?.brandName}`
  );
  const productsData: ProductType[] = await productsRes.json();

  return {
    props: { brand, productsData },
  };
};
